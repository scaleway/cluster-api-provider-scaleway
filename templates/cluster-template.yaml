apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
        - 10.244.0.0/16
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: ${CLUSTER_NAME}-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: ScalewayCluster
    name: ${CLUSTER_NAME}
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: ${CLUSTER_NAME}-control-plane
spec:
  kubeadmConfigSpec:
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          provider-id: "scaleway://instance/{{ ds.meta_data.zone }}/{{ ds.meta_data.id }}"
          cloud-provider: external
        name: "{{ ds.meta_data.hostname }}"
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          provider-id: "scaleway://instance/{{ ds.meta_data.zone }}/{{ ds.meta_data.id }}"
          cloud-provider: external
        name: "{{ ds.meta_data.hostname }}"
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: ScalewayMachineTemplate
      name: ${CLUSTER_NAME}-control-plane
  replicas: ${CONTROL_PLANE_MACHINE_COUNT:=1}
  version: ${KUBERNETES_VERSION}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: ScalewayCluster
metadata:
  name: ${CLUSTER_NAME}
  namespace: default
spec:
  projectID: ${SCW_PROJECT_ID}
  region: ${SCW_REGION}
  scalewaySecretName: ${CLUSTER_NAME}
  failureDomains:
    - ${SCW_REGION}-1
---
apiVersion: v1
kind: Secret
metadata:
  name: ${CLUSTER_NAME}
type: Opaque
stringData:
  SCW_ACCESS_KEY: ${SCW_ACCESS_KEY}
  SCW_SECRET_KEY: ${SCW_SECRET_KEY}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: ScalewayMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-control-plane
spec:
  template:
    spec:
      image:
        name: ${CONTROL_PLANE_MACHINE_IMAGE}
      commercialType: ${CONTROL_PLANE_MACHINE_COMMERCIAL_TYPE:=DEV1-S}
      rootVolume:
        type: ${CONTROL_PLANE_MACHINE_ROOT_VOLUME_TYPE:=block}
      publicNetwork:
        enableIPv4: true
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  clusterName: ${CLUSTER_NAME}
  replicas: ${WORKER_MACHINE_COUNT:=2}
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: ${CLUSTER_NAME}-md-0
      clusterName: ${CLUSTER_NAME}
      failureDomain: ${SCW_REGION}-1
      infrastructureRef:
        name: ${CLUSTER_NAME}-md-0
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: ScalewayMachineTemplate
      version: ${KUBERNETES_VERSION}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            provider-id: "scaleway://instance/{{ ds.meta_data.zone }}/{{ ds.meta_data.id }}"
            cloud-provider: external
          name: "{{ ds.meta_data.hostname }}"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: ScalewayMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  template:
    spec:
      image:
        name: ${WORKER_MACHINE_IMAGE}
      commercialType: ${WORKER_MACHINE_COMMERCIAL_TYPE:=DEV1-S}
      rootVolume:
        type: ${WORKER_MACHINE_ROOT_VOLUME_TYPE:=block}
      publicNetwork:
        enableIPv4: true
